<%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<%@ page contentType="text/html;charset=utf-8" %>
<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
<html>
<head>
  <meta charset="UTF-8">
  <title>Создание заявки</title>
</head>
<body>
<http>
  <csrf disabled="true" />
</http>
<c:if test="${pageContext.request.userPrincipal.name != null}">
  <form id="logoutForm" method="post" action="${contextPath}/logout">
    <input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}"/>
  </form>
  <h2>Данные пользователя ${pageContext.request.userPrincipal.name}
  </h2>
  <sec:authorize access="hasRole('ROLE_USER')"> <!-- Проверяем, что пользователь авторизован -->
    <a href="/welcome" class="btn">Назад</a> <!-- Отображаем ссылку на профиль -->
  </sec:authorize>

</div>
<%--<form:form action="/create_task" modelAttribute="newTask" method="GET" enctype="multipart/form-data">--%>
<%--  <h1>Форма заявки</h1>--%>
<%--  <div><label>Наименования заявки</label>--%>
<%--      <form:input type="text" path="nameTask" class="form-control"></form:input>--%>
<%--  <div>--%>
<%--    <form:select path="TaskImportance" >--%>
<%--      <c:forEach var="listImportance" items="${listImportance}">--%>
<%--      <option>--%>
<%--              ${listImportance}</option>--%>
<%--      </c:forEach>--%>
<%--    </form:select>--%>
<%--  </div>--%>


<%--  <div>--%>
<%--    <label>Содержание</label>--%>
<%--    <form:textarea type="text" path="TaskContent" class="form-control"></form:textarea>--%>
<%--  </div>--%>
<%--    </form:form>--%>

<form:form action="/add_file" modelAttribute="file" method="POST" enctype="multipart/form-data">
  <div>
    <label>Прикрепить файл</label>
    <input type="file" value="${file}" name="file" class="form-control">
  </div>
  <input value="Отправить" type="submit">

</form:form>
</c:if>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
<script src="${contextPath}/resources/js/bootstrap.min.js"></script>
</body>
</html>
    @RequestMapping(value = "/add_file", method = RequestMethod.POST, consumes = { MediaType.MULTIPART_FORM_DATA_VALUE })
    @ResponseBody
    public String postNewTask(@RequestParam("FileUser") MultipartFile file) throws IOException, ServletException {
        HttpGet request = null;
        MultipartFile test = file;

        System.out.println();
        System.out.println(test.getInputStream());

        File directory = new File("\\\\192.168.1.9\\billi\\");
        directory.mkdir();
        String fileName = StringUtils.cleanPath(test.getOriginalFilename());
        try {
            Path path= Paths.get(directory+"\\"+ fileName);

            Files.copy(test.getInputStream(), path, StandardCopyOption.REPLACE_EXISTING);
           // Files.copy(newTask.getFile()., path, StandardCopyOption.REPLACE_EXISTING);
        } catch (IOException e) {
            e.printStackTrace();
        }

        return "redirect:/create_task";
    }
    @RequestMapping(value = "/create_task", method = RequestMethod.GET)
    public String postNewTask(@ModelAttribute("newTask")Tasks newTask, Authentication authentication,Model model) throws IOException, ServletException {
        HttpGet request = null;
        switch (newTask.getTaskImportance())
        {
            case "Высокая":
                newTask.setTaskImportance("2");
                break;
            case "Средняя":
                newTask.setTaskImportance("1");
                break;
            case "Низкая":
                newTask.setTaskImportance("0");
                break;
            default:
                break;
        }
//        File directory = new File("\\\\192.168.1.9\\billi\\"+newTask.getNameTask());
//        directory.mkdir();
//        String fileName = StringUtils.cleanPath(newTask.getFiles().getName());
//        try {
//            Path path= Paths.get(directory+"\\"+ fileName);
//
//            Files.copy(Paths.get(newTask.getFiles().getAbsolutePath()),path,StandardCopyOption.REPLACE_EXISTING);
//            // Files.copy(newTask.getFile()., path, StandardCopyOption.REPLACE_EXISTING);
//        } catch (IOException e) {
//            e.printStackTrace();
//        }
//        User user = userService.findByUsername(authentication.getName());
//        Profile prof = profileService.findByUidUser(user.getUidUser());
//        CloseableHttpClient client = HttpClientBuilder.create().build();
//        String encoding = Base64.getEncoder().encodeToString((forBasicAuth()[0] + ":" +forBasicAuth()[1]).getBytes());
//        request.setHeader(HttpHeaders.AUTHORIZATION, "Basic " + encoding);
//        request = new HttpGet("http://192.168.1.224/franrit/hs/RitExchange/GetCreateTask/"+prof.getUidUser()+"/"
//                +newTask.getNameTask()+"/"+newTask.getTaskContent()+"/"+newTask.getTaskImportance()+"?File="+newTask.getNameTask()+"\\" + "fileName");
//        client.execute(request);
         model.addAttribute("newTask",newTask);
        return "create_task";
    }
